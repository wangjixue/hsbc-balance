<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hsbc.balance.repository.mapper.AccountMapper">

    <resultMap id="BaseResultMap" type="com.hsbc.balance.repository.AccountDO">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="accountId" column="account_id" jdbcType="VARCHAR"/>
            <result property="accountName" column="account_name" jdbcType="VARCHAR"/>
            <result property="balance" column="balance" jdbcType="DECIMAL"/>
            <result property="created" column="created" jdbcType="TIMESTAMP"/>
            <result property="modified" column="modified" jdbcType="TIMESTAMP"/>
            <result property="isDeleted" column="is_deleted" jdbcType="SMALLINT"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,account_id,account_name,balance,created,modified,
        is_deleted
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from account
        where  id = #{id,jdbcType=BIGINT} 
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from account
        where  id = #{id,jdbcType=BIGINT} 
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.hsbc.balance.repository.AccountDO" useGeneratedKeys="true">
        insert into account
        ( id,account_id,account_name,balance,created,modified,
        is_deleted)
        values (#{id,jdbcType=BIGINT},#{accountId,jdbcType=VARCHAR},#{accountName,jdbcType=VARCHAR},#{balance,jdbcType=DECIMAL},#{created,jdbcType=TIMESTAMP},#{modified,jdbcType=TIMESTAMP},
        #{isDeleted,jdbcType=SMALLINT})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.hsbc.balance.repository.AccountDO" useGeneratedKeys="true">
        insert into account
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="accountId != null">account_id,</if>
                <if test="accountName != null">account_name,</if>
                <if test="balance != null">balance,</if>
                <if test="created != null">created,</if>
                <if test="modified != null">modified,</if>
                <if test="isDeleted != null">is_deleted,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id,jdbcType=BIGINT},</if>
                <if test="accountId != null">#{accountId,jdbcType=VARCHAR},</if>
                <if test="accountName != null">#{accountName,jdbcType=VARCHAR},</if>
                <if test="balance != null">#{balance,jdbcType=DECIMAL},</if>
                <if test="created != null">#{created,jdbcType=TIMESTAMP},</if>
                <if test="modified != null">#{modified,jdbcType=TIMESTAMP},</if>
                <if test="isDeleted != null">#{isDeleted,jdbcType=SMALLINT},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.hsbc.balance.repository.AccountDO">
        update account
        <set>
                <if test="accountId != null">
                    account_id = #{accountId,jdbcType=VARCHAR},
                </if>
                <if test="accountName != null">
                    account_name = #{accountName,jdbcType=VARCHAR},
                </if>
                <if test="balance != null">
                    balance = #{balance,jdbcType=DECIMAL},
                </if>
                <if test="created != null">
                    created = #{created,jdbcType=TIMESTAMP},
                </if>
                <if test="modified != null">
                    modified = #{modified,jdbcType=TIMESTAMP},
                </if>
                <if test="isDeleted != null">
                    is_deleted = #{isDeleted,jdbcType=SMALLINT},
                </if>
        </set>
        where   id = #{id,jdbcType=BIGINT} 
    </update>
    <update id="updateByPrimaryKey" parameterType="com.hsbc.balance.repository.AccountDO">
        update account
        set 
            account_id =  #{accountId,jdbcType=VARCHAR},
            account_name =  #{accountName,jdbcType=VARCHAR},
            balance =  #{balance,jdbcType=DECIMAL},
            created =  #{created,jdbcType=TIMESTAMP},
            modified =  #{modified,jdbcType=TIMESTAMP},
            is_deleted =  #{isDeleted,jdbcType=SMALLINT}
        where   id = #{id,jdbcType=BIGINT} 
    </update>
    <update id="updateBalanceByAccountId" parameterType="com.hsbc.balance.repository.AccountDO">
        update account
        set
            balance =  #{balance,jdbcType=DECIMAL},
            modified =  #{modified,jdbcType=TIMESTAMP}
        where account_id =  #{accountId,jdbcType=VARCHAR}
    </update>

    <select id="findByAccountIdForUpdate" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List" />
        from account
        where account_id =  #{accountId,jdbcType=VARCHAR}
        for update
    </select>

    <select id="findByAccountId" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List" />
        from account
        where account_id =  #{accountId,jdbcType=VARCHAR}
    </select>

</mapper>
